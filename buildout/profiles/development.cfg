[buildout]
extends = base.cfg

parts +=
    devproducts
    paster
    omelette
    eggdeps
    ipzope
    
eggs +=
    ipdb
    threadframe
    plone.reload
    Products.DocFinderTab
#    Products.Clouseau 
    Products.PDBDebugMode
    Products.PrintingMailHost
#    Products.Gloworm

[devproducts]
recipe = plone.recipe.distros
urls =
#    http://dist.headnet.dk/DeadlockDebugger-1.0.tgz

[instance]
debug-mode = on
products += ${devproducts:location}
verbose-security = on

zcml +=


[paster]
recipe = zc.recipe.egg
eggs =
    PasteScript
    ZopeSkel
    zopeskel.dexterity<=2.99
    ${instance:eggs}


[omelette]
recipe = collective.recipe.omelette
ignore-develop = True
eggs = ${instance:eggs}

[eggdeps]
recipe = zc.recipe.egg
eggs = tl.eggdeps
       ${instance:eggs}
scripts = eggdeps
    
    
#
# ipy: loads an interactive python prompt with all the buildout eggs in python path.
# ipzope: loads an interactive python prompt with all the buildout eggs in python path, and loads zope as /app
# ( just like the old interactive zope prompt just with ipython)
# /SBW

[ipzope]
# a IPython Shell for interactive use with zope running.
# you also need to put
# http://svn.plone.org/svn/collective/dotipython/branches/plone4/ipy_profile_zope.pyy
# to your $HOME/.ipython directory for the following to work.
recipe = zc.recipe.egg
eggs =
        ipython
        ${instance:eggs}
initialization =
        import sys, os
        os.environ["INSTANCE_HOME"] = "${instance:location}"
        sys.argv[1:1] = "-p zope".split()
scripts = ipython=ipzope
    

[test]
recipe = zc.recipe.testrunner
eggs = ${buildout:eggs}

